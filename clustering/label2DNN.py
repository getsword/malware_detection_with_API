import json
import pathlib
import random

'''

{"sequence": ["AnalyzeStart", "Fake_BeCreatedEx_2", "TryToAnalyze_1", "LoadLibrary
ExW_2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryEx
W_2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryExW_
2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryExW_2", "LoadLibraryExW_2"
, "LoadLibraryExW_2", "LoadLibraryExW_2", "NtQueryAttributesFile_1", "LoadLibraryE
xW_2", "NtQueryAttributesFile_1", "LoadLibraryExW_2", "NtQueryAttributesFile_0", "
LoadLibraryExW_1", "NtQueryAttributesFile_2", "LoadLibraryExW_2", "LoadLibraryExW_
2", "NtQueryAttributesFile_0", "LoadLibraryExW_2", "NtQueryAttributesFile_1", "Loa
dLibraryExW_2", "NtCreateMutant", "NtCreateMutant", "NtCreateMutant", "NtQueryAttr
ibutesFile_0", "NtReadFile_2", "LoadLibraryExW_2", "NtCreateMutant", "NtCreateMuta
nt", "NtCreateMutant", "NtCreateMutant", "NtCreateMutant", "NtCreateMutant", "NtRe
adFile_0", "GetComputerNameW", "NtQueryAttributesFile_1", "LoadLibraryExW_2", "Get
ComputerNameExW", "Fake_DetectDebugger"],"label":1}

'''

'''

{"text": "AnalyzeStart BeCreatedEx_C2 TryToAnalyze_C2 DetectDebugger_C0 
LoadLibraryExW_C1 LoadLibraryExW_C2 LoadLibraryExW_C1 LoadLibraryExW_C0 
LoadLibraryExW_C0 LoadLibraryExW_C2 LoadLibraryExW_C1 NtQueryAttributesFile_C1 
LoadLibraryExW_C0 NtQueryAttributesFile_C0", "label": 0}

'''

NAME="_CLUSTER_3"
SEED=2022

# 顺带分割成train和test
# train.json
# test.json
def label2dnn(source_path,target_path):
    source_path=pathlib.Path(source_path)
    target_path=pathlib.Path(target_path)

    X_Y=[]
    with open(source_path,'r',encoding='utf-8') as f:
        for line in f.readlines():
            temp=json.loads(line)
            for i in range(len(temp['sequence'])):
                temp['sequence'][i] = temp['sequence'][i].replace('Fake_', '')
            X_Y.append([temp['sequence'],temp['label']])

    random.seed(SEED)
    random.shuffle(X_Y)

    X,y=[],[]
    for i in X_Y:
        X.append(i[0])
        y.append(i[1])


    train = []
    for text, label in zip(X, y):
        temp = {}
        temp['text'] = ' '.join(text)
        temp['label'] = label
        train.append(temp)


    with open(target_path, 'w', encoding='utf-8') as f:
        for i in train:
            f.write(json.dumps(i, ensure_ascii=False))
            f.write('\n')


if __name__=="__main__":
    label2dnn("labeled_data"+NAME+"/train/labeled_data.json","../DNN/DNN_data/train"+NAME+".json")
    label2dnn("labeled_data"+NAME+"/test/labeled_data.json", "../DNN/DNN_data/test"+NAME+'.json')

